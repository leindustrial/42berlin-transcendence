Do not change the names or location of the files \
generated by $django-admin startproject pong_game .

manage.py = a script that helps with management of the site. \
			allows to start a web server on our computer (for dev)\

settings.py = contains the configuration of the website

urls.py = contains a list of patterns used by the urlresolver

urlresolver = takes the url from the incoming request \
				and looks for a match in the list of patterns, \
				passes the request to the associated view function

view = few function performs the requested action e.g. look at \
		a database to look  for some information, and generates \
		a response that can be send back to the users web browser \

Run

$ python manage.py runserver

to start the Server, access the page through WebBrowser URL: localhost:8000

$ daphne -b 0.0.0.0 -p 8000 pong_game.asgi:application

to start the server, from host machine the page can be accessed with \
localhost:8000 and from network through hostmachine ip:8000

To start the Server with https:

$ daphne -e ssl:8043:privateKey=../ssl/private.key:certKey=../ssl/certificate.crt pong_game.asgi:application

access page through https://localhost:8043
self-signed certificate, therefore unsecure warning.
Use txacme endpoint syntox to get automatic certificate from Let's encrypt?
https://github.com/django/daphne


To run Server inside Docker container from sgoinfre:

Prerequisites: clone git repo to sgoinfre folder, Dockerfile at root of git repo and ssl folder with files private.key & certificate.crt are present,
 				runserver.sh inside django_backend folder is present, if not copy there

cd ft_transcendence_git (or whatever you named your git repo)
from home/your42intraname/sgoinfre/ft_transcendence_git run
$ docker build -t ft_transcendence --no-cache --progress=plain .
$ docker run -dp 4244:4244 ft_transcendence

Access from the host mashine page at https://localhost:8043 | from the network: https://ipaddressofthehostmachine:4244


Language support:
- we have: english, german, russian (not sll texts are translated for now, it's in progress)

Debug False
- when new static files are added run to add them also to the static files folder at the root of django_backend
- where they are served from whitenoise middleware instead of the runserver
$ python manage.py collectstatic

